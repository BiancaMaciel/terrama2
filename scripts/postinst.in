#!/bin/bash

function valid()
{
  if [ $1 -ne 0 ]; then
    echo $2
    echo ""
    exit 1
  fi
}

echo "Post-installation script..."

#
# Install web dependencies
#

npm install bower -g
npm install grunt -g

(
  echo "Webapp dependencies..."
  cd @TERRAMA2_DESTINATION@webapp
  npm install
  valid $? "Unable to install NodeJs dependencies."
  bower install --allow-root
  valid $? "Unable to install Bower dependencies."
  grunt
  valid $? "Error executing grunt."

  chmod +x bin/webapp-stop.js
)

(
  echo "Webcomponents dependencies..."
  cd @TERRAMA2_DESTINATION@webcomponents
  npm install
  valid $? "Unable to install NodeJs dependencies."
  grunt
  valid $? "Error executing grunt."
)

(
  echo "Webmonitor dependencies..."
  cd @TERRAMA2_DESTINATION@webmonitor
  npm install
  valid $? "Unable to install NodeJs dependencies."
  bower install --allow-root
  valid $? "Unable to install Bower dependencies."
  grunt
  valid $? "Error executing grunt."
)

#
# Install and configure pm2
#

# Check if pm2 is already installed
npm list pm2 -g
if [ $? != 0 ]; then
  echo "Configuring pm2..."
  # Install pm2
  npm install pm2 -g
  pm2 install pm2-logrotate
  valid $? "Error installing pm2."
  # Allows the service to start with the system
  env PATH=$PATH:/usr/local/bin pm2 startup
  valid $? "Error adding pm2 to startup."
fi

# Create a terrama2 user
# and default data folder
(
  adduser --system --no-create-home terrama2 --password terrama4
  mkdir -p /var/lib/terrama2/data
  chown terrama2:terrama2 /var/lib/terrama2 -R
)

# Add webapp to pm2 startup
(
  cd @TERRAMA2_DESTINATION@webapp

  (
    cd config
    if ! [ -f "webapp.json" ]; then
      cp sample_webapp.json webapp.json
    fi
  )

  echo "\n\n------------------------------"
  echo "To register the TerraMA2 as a service enter the 'terrama2' user password."
  echo "If you didn't have a 'terrama2' user the password is 'terrama4'."
  
  sudo -H -u terrama2 sudo pm2 start npm --name webapp -- start
  valid $? "Error executing webapp."
  sudo -H -u terrama2 sudo pm2 save
  valid $? "Error saving pm2 state."
  exit
)

# Add webmonitor to pm2 startup
(
  cd @TERRAMA2_DESTINATION@webmonitor

  (
    cd config
    if ! [ -f "monitor.json" ]; then
      cp sample_monitor.json monitor.json
    fi
  )

  sudo -H -u terrama2 sudo pm2 start npm --name webmonitor -- start
  valid $? "Error executing webmonitor."
  sudo -H -u terrama2 sudo pm2 save
  valid $? "Error saving pm2 state."
  exit
)

echo "End post-installation script..."

exit 0
